package app;

/**
 * 
 * @author Joseph Abraham
 * @version Jan 15, 2025
 * 
 * Description pending.
 */
public class Person {
	
	/**
	* The output of the Person class displays messages and values as the main method executes the program. When the getName(), getAge(), and getWeight() methods are called, they each print a message to indicate the method execution and return the respective attribute value. This design demonstrates encapsulation, where the attributes are private and accessed via public getter methods. The output reflects the initialized attributes of the Person object, showing how the constructor sets the values and how methods retrieve them.
	*
	*/
	
	private int age;
	private String name;
	private float weight;
	

	
	public Person(int age, String name, float weight)
	{
		super();
		this.age = age;
		this.name = name;
		this.weight = weight;
	}
	
	public int getAge()
	{
		System.out.println("I am in getAge()");
		return age;
	}
	
	public String getName()
	{
		System.out.println("I am in getName()");
		return name;
	}
	
	public float getWeight()
	{
		System.out.println("I am in getWeight()");
		return weight;	
	}
	
	public static void main(String[] args)
	{
		Person person = new Person(25, "Bob", (float) 165.02);
		System.out.println("My name is " + person.getName());
		person.getAge();
		person.getWeight();
	
	}

}


/*
+-----------------------+
|       Person          |
+-----------------------+
| - age: int           |
| - name: String       |
| - weight: float      |
+-----------------------+
| + Person(int, String, float) |
| + getAge(): int      |
| + getName(): String  |
| + getWeight(): float |
+-----------------------+

*/